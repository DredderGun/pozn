{:rename-macros {}, :renames {}, :use-macros {is cljs.test, deftest cljs.test}, :excludes #{}, :name test.search-dish, :imports nil, :requires {subs pozn-adaptive.subs, day8.re-frame.test day8.re-frame.test, rf re-frame.core, cljs.test cljs.test, pozn-adaptive.subs pozn-adaptive.subs, events pozn-adaptive.events, rf-test day8.re-frame.test, pozn-adaptive.events pozn-adaptive.events, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {search-dish {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/test/search_dish.cljs", :line 54, :column 10, :end-line 54, :end-column 21}, :name test.search-dish/search-dish, :variadic false, :file "/home/aleksandr/projects/pozn-adaptive/src/cljs/test/search_dish.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 54, :end-line 54, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :cljs.spec/registry-ref [], :require-macros {cljs.test cljs.test, rf-test day8.re-frame.test, day8.re-frame.test day8.re-frame.test}, :cljs.analyzer/constants {:seen #{:description :tables-view :tags first :sale-receipts-layout filtered-dishes :ings = :sale-receipts :group :layout :active-dish-in-receipt :ns :name :select-mod :file :end-column :pozn-adaptive.subs/filtered-dishes :c_time :menu-items :active-receipt :type :tables :table-areas second :short_name :column :pozn-adaptive.events/set-search-query :test.search-dish/initialize-test-db test.search-dish :fail :line :weight not :label :id clojure.core/deref :expected :fractional :end-line :active-table :active-menu-item :error search-dish :pass :serving_order3 :serving_order4 :full_name :arglists :actual :doc count :price :active-guest test.search-dish/search-dish :test :message}, :order [:test.search-dish/initialize-test-db :tables-view :sale-receipts :layout :active-dish-in-receipt :select-mod :menu-items :active-receipt :table-areas :active-table :active-menu-item :active-guest :sale-receipts-layout :description :tags :ings :group :c_time :short_name :weight :id :fractional :serving_order3 :serving_order4 :full_name :price :label :tables :pozn-adaptive.subs/filtered-dishes :pozn-adaptive.events/set-search-query :type :expected :actual :message :error = count clojure.core/deref filtered-dishes :pass :fail not first second test.search-dish/search-dish :ns :name :file :end-column :column :line :end-line :arglists :doc :test test.search-dish search-dish]}, :doc nil}