{:rename-macros {}, :renames {}, :use-macros {are cljs.test, is cljs.test, deftest cljs.test}, :excludes #{}, :name test.add-new-dish-test, :imports nil, :requires {cljs.test cljs.test, rf-test day8.re-frame.test, day8.re-frame.test day8.re-frame.test, re-frame re-frame.core, re-frame.core re-frame.core, events pozn-adaptive.events, pozn-adaptive.events pozn-adaptive.events, subs pozn-adaptive.subs, pozn-adaptive.subs pozn-adaptive.subs}, :cljs.spec/speced-vars [], :uses nil, :defs {dishtest {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/test/add_new_dish_test.cljs", :line 39, :column 10, :end-line 39, :end-column 18}, :name test.add-new-dish-test/dishtest, :variadic false, :file "/home/aleksandr/projects/pozn-adaptive/src/cljs/test/add_new_dish_test.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 39, :end-line 39, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :cljs.spec/registry-ref [], :require-macros {cljs.test cljs.test, rf-test day8.re-frame.test, day8.re-frame.test day8.re-frame.test}, :cljs.analyzer/constants {:seen #{:description :tables-view :tags first :sale-receipts-layout :ings = :sale-receipts :group :dishes test.add-new-dish-test test.add-new-dish-test/dishtest :pozn-adaptive.events/set-old-dish :pozn-adaptive.subs/active-menu-item :layout :active-dish-in-receipt :test.add-new-dish-test/initialize-test-db old-dish? :ns :name :select-mod :file :end-column :c_time :menu-items :active-receipt active-guest-map :type :tables :table-areas :short_name :pozn-adaptive.events/change-dish-count-in-receipt :sum-price :column active-dish-count-and-price active-receipt :fail :pozn-adaptive.subs/old-dish? :pozn-adaptive.subs/active-guest-map :line :weight not :pozn-adaptive.events/add-new-dish :label :id clojure.core/deref :count :pozn-adaptive.events/add-new-receipt :expected dishtest :fractional :end-line :active-table :active-menu-item :error :pass :serving_order3 :serving_order4 :pozn-adaptive.subs/active-dish-count-and-price :full_name :pozn-adaptive.subs/active-receipt :arglists :actual :doc :price :active-guest :test :menu-item-id :message active-menu-item}, :order [:test.add-new-dish-test/initialize-test-db :tables-view :sale-receipts :layout :active-dish-in-receipt :select-mod :menu-items :active-receipt :table-areas :active-table :active-menu-item :active-guest :sale-receipts-layout :description :tags :ings :group :c_time :short_name :weight :id :fractional :serving_order3 :serving_order4 :full_name :price :label :tables :pozn-adaptive.subs/active-guest-map :pozn-adaptive.subs/old-dish? :pozn-adaptive.subs/active-menu-item :pozn-adaptive.subs/active-receipt :pozn-adaptive.subs/active-dish-count-and-price :pozn-adaptive.events/add-new-receipt :pozn-adaptive.events/add-new-dish :pozn-adaptive.events/change-dish-count-in-receipt :type :expected :actual :message :error = clojure.core/deref old-dish? :pass :fail not first :dishes active-guest-map :menu-item-id :count :pozn-adaptive.events/set-old-dish active-menu-item active-receipt :sum-price active-dish-count-and-price test.add-new-dish-test/dishtest :ns :name :file :end-column :column :line :end-line :arglists :doc :test test.add-new-dish-test dishtest]}, :doc nil}