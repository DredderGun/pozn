{:rename-macros {}, :renames {}, :externs {document {getElementById {}}, window {addEventListener {}, innerWidth {}}}, :use-macros {}, :excludes #{}, :name pozn-adaptive.core, :imports nil, :requires {reagent reagent.core, views pozn-adaptive.main, pozn-adaptive.config pozn-adaptive.config, reagent.core reagent.core, config pozn-adaptive.config, events pozn-adaptive.events, pozn-adaptive.main pozn-adaptive.main, pozn-adaptive.events pozn-adaptive.events, re-frame re-frame.core, re-frame.core re-frame.core}, :cljs.spec/speced-vars [], :uses nil, :defs {dev-setup {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/pozn_adaptive/core.cljs", :line 10, :column 7, :end-line 10, :end-column 16, :arglists (quote ([]))}, :name pozn-adaptive.core/dev-setup, :variadic false, :file "src/cljs/pozn_adaptive/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/pozn_adaptive/core.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([]))}, :name pozn-adaptive.core/mount-root, :variadic false, :file "src/cljs/pozn_adaptive/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/pozn_adaptive/core.cljs", :line 21, :column 16, :end-line 21, :end-column 20, :export true, :arglists (quote ([]))}, :name pozn-adaptive.core/init, :variadic false, :file "src/cljs/pozn_adaptive/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:pozn-adaptive.events/initialize-db :pozn-adaptive.events/set-window-width}, :order [:pozn-adaptive.events/set-window-width :pozn-adaptive.events/initialize-db]}, :doc nil}