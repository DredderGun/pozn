{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pozn-adaptive.helpers, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {allocate-next-id {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/pozn_adaptive/helpers.cljs", :line 3, :column 7, :end-line 3, :end-column 23, :arglists (quote ([items-list]))}, :name pozn-adaptive.helpers/allocate-next-id, :variadic false, :file "src/cljs/pozn_adaptive/helpers.cljs", :end-column 23, :method-params ([items-list]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([items-list]))}, allocate-next-id-vec {:protocol-inline nil, :meta {:file "/home/aleksandr/projects/pozn-adaptive/src/cljs/pozn_adaptive/helpers.cljs", :line 7, :column 7, :end-line 7, :end-column 27, :arglists (quote ([vec]))}, :name pozn-adaptive.helpers/allocate-next-id-vec, :variadic false, :file "src/cljs/pozn_adaptive/helpers.cljs", :end-column 27, :method-params ([vec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 1, :fn-var true, :arglists (quote ([vec]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:id}, :order [:id]}, :doc nil}