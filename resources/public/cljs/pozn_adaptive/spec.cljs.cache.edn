{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pozn-adaptive.spec, :imports nil, :requires {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.spec/speced-vars [], :uses nil, :cljs.spec/registry-ref [[:pozn-adaptive.spec/swipe-started cljs.core/boolean?] [:pozn-adaptive.spec/sent? cljs.core/boolean?] [:pozn-adaptive.spec/sale-receipts-in-db (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/sale-receipts])] [:pozn-adaptive.spec/layout cljs.core/keyword?] [:pozn-adaptive.spec/active-receipt cljs.core/int?] [:pozn-adaptive.spec/price cljs.core/int?] [:pozn-adaptive.spec/selected? cljs.core/boolean?] [:pozn-adaptive.spec/guests (cljs.spec.alpha/map-of cljs.core/int? :pozn-adaptive.spec/guest)] [:pozn-adaptive.spec/table-areas (cljs.core/fn [%] (cljs.core/every? (cljs.core/fn [el-map] (cljs.core/and (:id el-map) (:tables el-map))) %))] [:pozn-adaptive.spec/table (cljs.spec.alpha/coll-of cljs.core/number? :kind cljs.core/vector?)] [:pozn-adaptive.spec/active-table (cljs.spec.alpha/coll-of cljs.core/number? :kind cljs.core/vector? :count 2)] [:pozn-adaptive.spec/dates #{:send :origin :pay}] [:pozn-adaptive.spec/sale-receipts (cljs.spec.alpha/or :empty-map? (cljs.spec.alpha/and cljs.core/map? cljs.core/empty?) :req-parameters (cljs.spec.alpha/map-of cljs.core/int? (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/id :pozn-adaptive.spec/guests])))] [:pozn-adaptive.spec/dishes (cljs.spec.alpha/or :empty-vector (cljs.spec.alpha/and cljs.core/vector? cljs.core/empty?) :dish-vector (cljs.spec.alpha/coll-of (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/id :pozn-adaptive.spec/guest-id :pozn-adaptive.spec/menu-item-id :pozn-adaptive.spec/name :pozn-adaptive.spec/price :pozn-adaptive.spec/selected?] :opt-un [:pozn-adaptive.spec/count]) :kind cljs.core/vector?))] [:pozn-adaptive.spec/active-menu-item cljs.core/int?] [:pozn-adaptive.spec/paid? cljs.core/boolean?] [:pozn-adaptive.spec/db (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/layout :pozn-adaptive.spec/select-mod :pozn-adaptive.spec/active-receipt :pozn-adaptive.spec/active-guest :pozn-adaptive.spec/active-menu-item :pozn-adaptive.spec/tables-view :pozn-adaptive.spec/modal-windows :pozn-adaptive.spec/table-areas :pozn-adaptive.spec/active-table :pozn-adaptive.spec/modificators-to-new-receipt :pozn-adaptive.spec/menu-items :pozn-adaptive.spec/sale-receipts :pozn-adaptive.spec/statistic] :opt-un [:pozn-adaptive.spec/phone :pozn-adaptive.spec/statistic])] [:pozn-adaptive.spec/active-guest cljs.core/int?] [:pozn-adaptive.spec/select-mod cljs.core/boolean?] [:pozn-adaptive.spec/menu-items (cljs.spec.alpha/coll-of (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/id :pozn-adaptive.spec/short_name :pozn-adaptive.spec/price] :opt-un [:pozn-adaptive.spec/description :pozn-adaptive.spec/tags :pozn-adaptive.spec/ings :pozn-adaptive.spec/group :pozn-adaptive.spec/c_time :pozn-adaptive.spec/weight :pozn-adaptive.spec/fractional :pozn-adaptive.spec/serving_order3 :pozn-adaptive.spec/serving_order4 :pozn-adaptive.spec/full_name]) :kind cljs.core/vector?)] [:pozn-adaptive.spec/menu-item-id cljs.core/int?] [:pozn-adaptive.spec/short_name (cljs.spec.alpha/or :name-str cljs.core/string? :empty-str clojure.string/blank?)] [:pozn-adaptive.spec/tables-view cljs.core/int?] [:pozn-adaptive.spec/statistic (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/sold-dishes-count :pozn-adaptive.spec/common-sum :pozn-adaptive.spec/card-sum :pozn-adaptive.spec/cash-sum :pozn-adaptive.spec/cash-sum :pozn-adaptive.spec/paid-receipt-count :pozn-adaptive.spec/unpaid-receipt-count])] [:pozn-adaptive.spec/guest-id cljs.core/int?] [:pozn-adaptive.spec/modal-windows cljs.core/map?] [:pozn-adaptive.spec/guest (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/id :pozn-adaptive.spec/dishes :pozn-adaptive.spec/swipe-started])] [:pozn-adaptive.spec/id cljs.core/int?] [:pozn-adaptive.spec/modificators-to-new-receipt (cljs.spec.alpha/keys :req-un [:pozn-adaptive.spec/w_oil :pozn-adaptive.spec/w_salt :pozn-adaptive.spec/warm :pozn-adaptive.spec/w_onion :pozn-adaptive.spec/w_garnish])] [:pozn-adaptive.spec/count cljs.core/int?]], :require-macros {s cljs.spec.alpha, cljs.spec.alpha cljs.spec.alpha}, :cljs.analyzer/constants {:seen #{:description :pozn-adaptive.spec/swipe-started :tables-view :req-un :opt-un :tags :unpaid-receipt-count cljs.core/boolean? :dish-vector :pozn-adaptive.spec/sent? :pozn-adaptive.spec/sale-receipts-in-db :ings :gfn :pozn-adaptive.spec/phone :statistic :pozn-adaptive.spec/layout :pozn-adaptive.spec/active-receipt cljs.core/keyword? :pred-exprs :pozn-adaptive.spec/price :into :keys-pred :pozn-adaptive.spec/w_salt :w_garnish :sale-receipts :pozn-adaptive.spec/selected? :w_oil :guest-id cljs.core/vector? clojure.string/blank? :group :pozn-adaptive.spec/w_onion :opt-keys :pozn-adaptive.spec/guests :dishes :empty-str :req-parameters el-map :pozn-adaptive.spec/cash-sum :pozn-adaptive.spec/table-areas cljs.spec.alpha/and cljs.spec.alpha/coll-of :layout :phone :cljs.spec.alpha/kind-form :swipe-started :pozn-adaptive.spec/full_name cljs.core/int? :sold-dishes-count :pozn-adaptive.spec/serving_order3 :pozn-adaptive.spec/serving_order4 :name cljs.core/string? :pozn-adaptive.spec/ings :pozn-adaptive.spec/common-sum :select-mod :req-specs cljs.spec.alpha/or :pozn-adaptive.spec/warm :w_salt :c_time :menu-items :active-receipt :pozn-adaptive.spec/weight :empty-vector cljs.spec.alpha/tuple :tables cljs.core/empty? :pozn-adaptive.spec/paid-receipt-count s/keys :table-areas :empty-map? int? cljs.core/contains? :pozn-adaptive.spec/table cljs.core/map? :pozn-adaptive.spec/active-table :cljs.spec.alpha/cpred :pozn-adaptive.spec/dates :pozn-adaptive.spec/sale-receipts :pozn-adaptive.spec/dishes :guests :short_name % :pozn-adaptive.spec/active-menu-item :pozn-adaptive.spec/paid? :common-sum :pozn-adaptive.spec/tags cljs.spec.alpha/keys :pozn-adaptive.spec/db cljs.core/number? :paid-receipt-count :warm :pozn-adaptive.spec/active-guest :req :modal-windows :pozn-adaptive.spec/select-mod :pozn-adaptive.spec/card-sum :weight :id :pozn-adaptive.spec/menu-items :kind cljs.spec.alpha/map-of :pozn-adaptive.spec/menu-item-id :count :name-str :req-keys :pozn-adaptive.spec/short_name cljs.core/fn :send :pozn-adaptive.spec/c_time :opt-specs :fractional :pozn-adaptive.spec/tables-view :active-table :pred-forms :pozn-adaptive.spec/name :active-menu-item :origin :pozn-adaptive.spec/statistic :pozn-adaptive.spec/group :pozn-adaptive.spec/guest-id :serving_order3 :pozn-adaptive.spec/description :pay :cljs.spec.alpha/kfn :pozn-adaptive.spec/w_oil :serving_order4 :card-sum :full_name :pozn-adaptive.spec/w_garnish :pozn-adaptive.spec/modal-windows :pozn-adaptive.spec/unpaid-receipt-count :pozn-adaptive.spec/guest :pozn-adaptive.spec/id :w_onion cljs.core/and :pozn-adaptive.spec/modificators-to-new-receipt :price :active-guest :selected? :pozn-adaptive.spec/fractional :cljs.spec.alpha/conform-all :pozn-adaptive.spec/sold-dishes-count :cash-sum cljs.core/every? :pozn-adaptive.spec/count :modificators-to-new-receipt number? :menu-item-id :cljs.spec.alpha/describe :opt}, :order [:pozn-adaptive.spec/id cljs.core/int? :pozn-adaptive.spec/layout cljs.core/keyword? :pozn-adaptive.spec/select-mod cljs.core/boolean? :pozn-adaptive.spec/active-receipt :pozn-adaptive.spec/active-guest :pozn-adaptive.spec/active-menu-item :pozn-adaptive.spec/tables-view :pozn-adaptive.spec/modal-windows cljs.core/map? :pozn-adaptive.spec/price :pozn-adaptive.spec/menu-item-id :pozn-adaptive.spec/guest-id :pozn-adaptive.spec/selected? :pozn-adaptive.spec/paid? :pozn-adaptive.spec/sent? :pozn-adaptive.spec/count :pozn-adaptive.spec/swipe-started :pozn-adaptive.spec/dates :send :origin :pay :pozn-adaptive.spec/short_name cljs.spec.alpha/or :name-str cljs.core/string? :empty-str clojure.string/blank? :pozn-adaptive.spec/statistic cljs.spec.alpha/keys :req-un :pozn-adaptive.spec/sold-dishes-count :pozn-adaptive.spec/common-sum :pozn-adaptive.spec/card-sum :pozn-adaptive.spec/cash-sum :pozn-adaptive.spec/paid-receipt-count :pozn-adaptive.spec/unpaid-receipt-count :opt-un :gfn :pred-exprs :keys-pred :opt-keys :req-specs :req :req-keys :opt-specs :pred-forms :opt :sold-dishes-count :common-sum :card-sum :cash-sum :paid-receipt-count :unpaid-receipt-count cljs.core/fn % cljs.core/contains? :pozn-adaptive.spec/modificators-to-new-receipt :pozn-adaptive.spec/w_oil :pozn-adaptive.spec/w_salt :pozn-adaptive.spec/warm :pozn-adaptive.spec/w_onion :pozn-adaptive.spec/w_garnish :w_oil :w_salt :warm :w_onion :w_garnish :pozn-adaptive.spec/table-areas cljs.core/every? el-map cljs.core/and :id :tables :pozn-adaptive.spec/active-table cljs.spec.alpha/coll-of cljs.core/number? :kind cljs.core/vector? :count number? :cljs.spec.alpha/kind-form :cljs.spec.alpha/cpred :cljs.spec.alpha/conform-all :cljs.spec.alpha/describe :pozn-adaptive.spec/menu-items :pozn-adaptive.spec/description :pozn-adaptive.spec/tags :pozn-adaptive.spec/ings :pozn-adaptive.spec/group :pozn-adaptive.spec/c_time :pozn-adaptive.spec/weight :pozn-adaptive.spec/fractional :pozn-adaptive.spec/serving_order3 :pozn-adaptive.spec/serving_order4 :pozn-adaptive.spec/full_name s/keys :short_name :price :description :tags :ings :group :c_time :weight :fractional :serving_order3 :serving_order4 :full_name :pozn-adaptive.spec/dishes :empty-vector cljs.spec.alpha/and cljs.core/empty? :dish-vector :pozn-adaptive.spec/name :guest-id :menu-item-id :name :selected? :pozn-adaptive.spec/guest :dishes :swipe-started :pozn-adaptive.spec/guests cljs.spec.alpha/map-of cljs.spec.alpha/tuple int? :into :cljs.spec.alpha/kfn :pozn-adaptive.spec/table :pozn-adaptive.spec/sale-receipts :empty-map? :req-parameters :guests :pozn-adaptive.spec/sale-receipts-in-db :sale-receipts :pozn-adaptive.spec/db :pozn-adaptive.spec/phone :layout :select-mod :active-receipt :active-guest :active-menu-item :tables-view :modal-windows :table-areas :active-table :modificators-to-new-receipt :menu-items :statistic :phone]}, :doc nil}